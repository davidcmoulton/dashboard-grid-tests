@import "variables";

@mixin grid-setup {
  display: grid;
  grid-column-gap: $grid-gap;

  /*
   Nullify the effect of the first and last grip gaps by reducing the first and last column tracks
    respectively by the width of the grid gap. The first and last grid column tracks are only used in
    order to be able to have a full width separator preceding and /or following a row which isn't full
    width
  */
  grid-template-columns: calc(#{map_get($grid-edge-space, medium)} - #{$grid-gap}) repeat(12, 1fr) calc(#{map_get($grid-edge-space, medium)} - #{$grid-gap});

  @media screen and (min-width: map_get($breakpoint, medium)) {
    grid-template-columns: calc(#{map_get($grid-edge-space, large)} - #{$grid-gap}) repeat(12, 1fr) calc(#{map_get($grid-edge-space, large)} - #{$grid-gap});
  }

  @media screen and (min-width: map_get($breakpoint, x-wide)) {
    /* Grid is fixed width at and above this breakpoint. This means grid-gap and column widths can be explicitly set in rem / px */
    grid-gap: 18px;
    grid-template-columns: 1fr repeat(12, 76px) 1fr;
  }
}

.grid {
  @include grid-setup();
  width: 100vw;
}
